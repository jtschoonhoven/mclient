#!/bin/bash
PORT=8080
USB_PATH="/mnt/usb"
OMX_OPTS="-srI"
OMX_TIMEOUT="2"
UDP_TIMEOUT="5"
IMG_TIMEOUT="5"
SUPPORTED_VIDEO_EXTENSIONS="@(*.mp4|*.avi|*.mov|*.mkv|*.m4v|*.h264|*.264)"
SUPPORTED_IMAGE_EXTENTIONS='.png$|.jpg$'

# commands
REFRESH_DISPLAY="fbset -depth 8 && fbset -depth 16"
TRY_PLAY_STREAM="omxplayer $OMX_OPTS --timeout $OMX_TIMEOUT --live udp://0.0.0.0:$PORT"
START_SLIDESHOW="fbi --autozoom --timeout 30 --blend 1000 --noverbose --random -T 2 $USB_PATH/*{.jpg,.png}"

# ensure script is run as root
if [ "$(id -u)" != "0" ]; then
  echo "permission denied (try sudo)"
  exit 1
fi

echo "starting mclient"
while true; do

    # pass if video player is active
    if pgrep omxplayer > /dev/null; then
        echo "omxplayer already running: sleeping"
        sleep 5
        continue
    fi

    # display slideshow images if available
    echo "checking for image files in $USB_PATH"
    if ls -l /mnt/usb/ | grep -iE $SUPPORTED_IMAGE_EXTENTIONS; then
        echo "killing old image process"
        echo "starting image slideshow from USB"
        eval $REFRESH_DISPLAY
        eval $START_SLIDESHOW
        eval sleep $IMG_TIMEOUT
        pkill -9 fbi
    fi

    # play video if UDP traffic is detected on $PORT
    echo "checking UDP stream on $PORT"
    if timeout --foreground $UDP_TIMEOUT socat UDP-RECVFROM:8080 /dev/null; then
        echo "UDP stream detected: attempting playback"
        eval $REFRESH_DISPLAY
        eval $TRY_PLAY_STREAM
    fi

    # then check USB drive
    echo "checking for USB drive content at $USB_PATH"
    if [ "$(ls -A $USB_PATH)" ]; then
        for FILE_PATH in $USB_PATH/*; do

            # skip if not a regular file
            [ -f "$FILE_PATH" ] || continue

            # skip unsupported file types
            if [[ ! "$FILE_PATH" == $SUPPORTED_VIDEO_EXTENSIONS ]]; then
                echo "file $FILE_PATH is not supported"
                continue
            fi

            # play next video from disk
            echo "playing $FILE_PATH"
            eval $REFRESH_DISPLAY
            omxplayer $OMX_OPTS "$FILE_PATH"

            # display slideshow images if available
            echo "checking for image files in $USB_PATH"
            if ls -l /mnt/usb/ | grep -iE $SUPPORTED_IMAGE_EXTENTIONS; then
                echo "killing old image process"
                echo "starting image slideshow from USB"
                eval $REFRESH_DISPLAY
                eval $START_SLIDESHOW
                eval sleep $IMG_TIMEOUT
                pkill -9 fbi
            fi

            # check network stream between videos
            echo "checking UDP stream on $PORT"
            if timeout --foreground $UDP_TIMEOUT socat UDP-RECVFROM:8080 /dev/null; then
                echo "UDP stream detected: attempting playback"
                eval $REFRESH_DISPLAY
                eval $TRY_PLAY_STREAM
            fi
        done

        continue
    fi

    # finally, if no USB content, attempt to mount available devices
    echo "no contents in $USB_PATH: attempting mount"
    for DRIVE_PATH in /dev/sda*; do

        # skip if path is not a device file
        [ -b "$DRIVE_PATH" ] || continue

        # keep trying until mount succeeds
        echo "mounting $DRIVE_PATH"
        if mount "$DRIVE_PATH" "$USB_PATH"; then
            break
        fi

    done
done
